AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS Lambda function deployment template

Resources:
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: hello-world-api
      CodeUri: ./
      Handler: index.handler
      Runtime: nodejs18.x
      MemorySize: 128
      Timeout: 3
      Role: !GetAtt LambdaExecutionRole.Arn
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /hello-world-api
            Method: GET
            RestApiId: !Ref ServerlessRestApi

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - lambda.amazonaws.com
                - apigateway.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: LambdaApiGatewayPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - execute-api:Invoke
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'

  ServerlessRestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      EndpointConfiguration: 
        Type: REGIONAL

  DeploymentBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: hello-lambda-deployments-binodbandara

Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello-world-api"
  FunctionArn:
    Description: "Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
