version: 0.2

phases:
  install:
    commands:
      - echo "Installing dependencies"
      - pip install aws-sam-cli awscli --upgrade

  pre_build:
    commands:
      - echo "Cleaning up any existing stack..."
      # First detach policies from the role
      - |
        ROLE_NAME="hello-world-api-LambdaExecutionRole"
        if aws iam list-attached-role-policies --role-name $ROLE_NAME --region eu-north-1 2>/dev/null; then
          for ARN in $(aws iam list-attached-role-policies --role-name $ROLE_NAME --query 'AttachedPolicies[].PolicyArn' --output text); do
            aws iam detach-role-policy --role-name $ROLE_NAME --policy-arn $ARN
          done
        fi
      # Then try to delete the role
      - aws iam delete-role --role-name $ROLE_NAME --region eu-north-1 || true
      # Now delete the stack
      - aws cloudformation delete-stack --stack-name hello-world-api --region eu-north-1
      - echo "Waiting for 30 seconds..."
      - sleep 30
      # Verify deletion
      - |
        if aws cloudformation describe-stacks --stack-name hello-world-api --region eu-north-1 2>/dev/null; then
          echo "Stack deletion failed, trying with retain-resources..."
          aws cloudformation delete-stack --stack-name hello-world-api --region eu-north-1 --retain-resources "LambdaExecutionRole" "HelloWorldFunction" "ServerlessRestApi"
          sleep 30
        fi

  build:
    commands:
      - echo "Building application with SAM"
      - sam build --debug

  post_build:
    commands:
      - echo "Packaging application"
      - sam package --s3-bucket hello-lambda-deployments-binodbandara --output-template-file packaged.yaml --region eu-north-1
      - echo "Deploying application"
      - sam deploy --template-file packaged.yaml --stack-name hello-world-api --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM --region eu-north-1 --no-confirm-changeset --no-fail-on-empty-changeset --force-upload --debug

artifacts:
  files:
    - packaged.yaml
    - template.yaml
  discard-paths: yes
